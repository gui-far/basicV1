// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  email        String      @unique
  password     String
  isAdmin      Boolean     @default(false)
  refreshToken String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  userGroups   UserGroup[]

  @@map("users")
}

model Group {
  id            String          @id @default(uuid())
  name          String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  userGroups    UserGroup[]
  groupEndpoints GroupEndpoint[]

  @@map("groups")
}

model UserGroup {
  id        String   @id @default(uuid())
  userId    String
  groupId   String
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  group Group @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@unique([userId, groupId])
  @@map("user_groups")
}

model Endpoint {
  id            String          @id @default(uuid())
  description   String
  path          String
  method        String
  isPublic      Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  groupEndpoints GroupEndpoint[]

  @@map("endpoints")
}

model GroupEndpoint {
  id         String   @id @default(uuid())
  groupId    String
  endpointId String
  createdAt  DateTime @default(now())

  group    Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  endpoint Endpoint @relation(fields: [endpointId], references: [id], onDelete: Cascade)

  @@unique([groupId, endpointId])
  @@map("group_endpoints")
}
